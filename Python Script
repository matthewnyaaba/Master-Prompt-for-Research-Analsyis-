#!/usr/bin/env python3
"""
Research Paper Analysis Tool
Provides structured prompts for analyzing different sections of academic papers
"""

import sys
from typing import Optional, List, Dict
from enum import Enum
import textwrap


class SectionType(Enum):
    """Enum for different research paper sections"""
    INTRODUCTION = "Introduction"
    LITERATURE_REVIEW = "Literature Review"
    METHODS = "Methods"
    FINDINGS = "Findings/Results"
    DISCUSSION = "Discussion"
    CONCLUSION = "Conclusion"


class ResearchPaperAnalyzer:
    """Main class for research paper analysis prompts"""
    
    def __init__(self):
        self.section_checklists = self._initialize_checklists()
    
    def _initialize_checklists(self) -> Dict[SectionType, List[str]]:
        """Initialize section-specific checklists"""
        return {
            SectionType.INTRODUCTION: [
                "Compelling hook/opening",
                "Clear problem statement",
                "Research gap emerges naturally",
                "Objectives/questions are specific",
                "Significance is established",
                "Scope is defined",
                "Roadmap provided"
            ],
            SectionType.LITERATURE_REVIEW: [
                "Organized thematically/chronologically",
                "Critical synthesis (not just summary)",
                "Identifies patterns and contradictions",
                "Clear theoretical framework",
                "Gaps and debates highlighted",
                "Your position is clear",
                "Recent and seminal sources balanced"
            ],
            SectionType.METHODS: [
                "Research design justified",
                "Procedures replicable",
                "Sample/data described adequately",
                "Instruments/measures explained",
                "Analysis approach clear",
                "Limitations acknowledged",
                "Ethical considerations addressed"
            ],
            SectionType.FINDINGS: [
                "Organized by themes/research questions",
                "Data presented clearly",
                "Tables/figures effective",
                "Objective reporting",
                "No interpretation (save for discussion)",
                "All research questions addressed",
                "Surprising findings highlighted"
            ],
            SectionType.DISCUSSION: [
                "Key findings summarized first",
                "Connected to literature/theory",
                "Implications explored",
                "Limitations honestly addressed",
                "Alternative explanations considered",
                "Practical applications discussed",
                "Future research directions clear"
            ],
            SectionType.CONCLUSION: [
                "Research questions answered",
                "Key contributions reiterated",
                "Broader implications stated",
                "No new information introduced",
                "Memorable closing",
                "Call to action (if appropriate)",
                "Full circle to introduction"
            ]
        }
    
    def generate_introduction_prompt(self, text: str, additional_focus: Optional[str] = None) -> str:
        """Generate specific prompt for introduction analysis"""
        prompt = f"""
TASK: Critically examine this academic introduction for:
1. Logical flow and coherence
2. How the research gap emerges
3. Statement ordering and relationships
4. Overall argumentative effectiveness

TEXT TO ANALYZE:
{text}

ANALYTICAL FRAMEWORK:
- Structure Analysis: How do paragraphs connect? Is there a clear narrative arc?
- Gap Identification: Where and how is the research gap stated? Is it compelling?
- Flow Assessment: Which statements support vs. interrupt the argument?
- Evidence Quality: Are claims supported or merely asserted?
- Reader Impact: Does the introduction create urgency and interest?

SPECIFIC CHECKPOINTS:
□ Opening hook - Does it grab attention and establish importance?
□ Context building - Is background provided at the right time?
□ Problem statement - Is the issue clear and significant?
□ Gap emergence - Does it flow naturally from the discussion?
□ Differentiation - How does this study differ from existing work?
□ Research questions - Do they logically follow from the gap?

CRITICAL QUESTIONS TO ASK:
- What's the "so what?" factor?
- Could paragraphs be reordered for better impact?
- Which sentences are doing real work vs. filling space?
- Where do assumptions replace evidence?
- What's missing that would strengthen the argument?

OUTPUT FORMAT:
1. Overall assessment
2. Paragraph-by-paragraph critique
3. Specific reordering recommendations
4. Missing elements to add
5. Elements to remove
6. Rewritten example showing improvements
"""
        
        if additional_focus:
            prompt += f"\n\nADDITIONAL FOCUS:\n{additional_focus}"
        
        return prompt
    
    def generate_master_prompt(self, 
                             section_type: SectionType, 
                             text: str, 
                             additional_focus: Optional[str] = None) -> str:
        """Generate master analysis prompt for any section"""
        
        # Get section-specific checklist
        checklist_items = self.section_checklists.get(section_type, [])
        checklist_formatted = "\n".join([f"□ {item}" for item in checklist_items])
        
        prompt = f"""
